{"version":3,"sources":["logic/utils.js","assets/drink2.png","pages/GenerateRecipes.js","Components/Recipes.js","assets/wine.jpg","assets/lemon.jpg","assets/alcohol bottle.png","assets/soda.png","assets/whiskey.png","assets/sparkling.png","assets/orange.png","assets/tonic.png","assets/honey.png","assets/rum.png","assets/tequila.png","assets/bourbon.png","assets/ginger.png","assets/gin.png","assets/mint.png","assets/tomato.png","assets/cranberry.jpg","assets/vermouth.jpg","assets/champagne.png","pages/AddIngredients.js","assets/beth.png","assets/marge.png","assets/ray.png","pages/GuessKiller.js","pages/RecipeSteps.js","logic/story-generation.js","pages/TheStory.js","pages/Finit.js","assets/drink.jpg","pages/Home.js","Routes.js","App.js","index.js"],"names":["getURLInt","name","location","parseInt","URLSearchParams","search","get","getURLStr","randFrom","list","min","max","length","Math","floor","random","commaAndAndSeparate","a","join","replace","GenerateRecipes","props","recipeOptions","recipe","history","suspects","useHistory","className","ingredients","toLowerCase","src","drink","map","r","Button","variant","onClick","push","Recipes","drinks","TomCollins","steps","CapeCodder","Daiquiri","WhiteWineSprizer","Margarita","Cosmopolitan","MoscowMule","ClassicMartini","VodkaMartini","Mojito","French75","Gimlet","DarkandStormy","MaiTai","Southside","GingerSpritz","Screwdriver","OrangeBlossom","BishopCocktail","RedWineSpritzer","food","IngredientCard","value","image","useState","selected","setSelected","currentClassName","Grid","item","xs","style","userSelect","alt","AddIngredients","Set","recipes","onIngredientClick","adding","add","delete","container","direction","justify","alignItems","lemon","alcohol","soda","tequila","rum","whiskey","tonic","wine","honey","Sparkling","orange","bourbon","mint","gin","ginger","tomato","cranberry","vermouth","champagne","size","possibilities","possibleRecipes","Object","keys","forEach","key","array","set","every","e","has","slice","setRecipeOptions","setSuspects","Elizabeth","Margaret","Raymond","setRecipe","console","log","KillerProfile","onSelect","class","GuessKiller","guess","setGuess","selectedSuspect","setSelectedSuspect","step","useLocation","guessed","beth","marge","ray","guessedAt","suspect","SuspectProfile","RecipeSteps","ingredient","Days","DayDescriptors","Locations","Victims","VictimDescriptors","ActorProfile","TheStory","story","day","concat","victim","victimFirstName","split","victimDescriptor","atLocation","generateStory","Finit","correct","killer","getKiller","fatalRecipe","getFatalRecipe","title","subtitle","conclusion","Fragment","Home","to","Routes","path","component","App","basename","exact","Default","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df71af57.chunk.js","sourcesContent":["const getURLInt = (name, location) => {\n  return parseInt(new URLSearchParams(location.search).get(name));\n}\n\nconst getURLStr = (name, location) => {\n  return new URLSearchParams(location.search).get(name);\n}\n\nconst arrayInSet = (array, set) => {\n  return array.every((e) => { return set.has(e); })\n}\n\nconst randInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst randFrom = list => {\n  let index = randInt(0, list.length - 1);\n  return list[index];\n}\n\nconst commaAndAndSeparate = a => {\n  return a.join(', ').replace(/,(?!.*,)/gmi, ', and');\n}\n\nexport { getURLInt, getURLStr, arrayInSet, randInt, randFrom, commaAndAndSeparate };\n","export default __webpack_public_path__ + \"static/media/drink2.688e75f3.png\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from \"@material-ui/core\";\nimport { commaAndAndSeparate } from '../logic/utils';\nimport drink from '../assets/drink2.png';\n\nimport '../styles/generaterecipes.css';\n\nconst GenerateRecipes = (props) => {\n  const { recipeOptions, recipe, suspects } = props;\n  const history = useHistory();\n\n  const toStory = () => {\n    history.push('/story');\n  };\n\n  return (\n    <div className=\"background\">\n      <div className=\"white-card-generate-recipes\">\n        <div className=\"title\">Your Unknown Drink</div>\n        <br></br>\n        <div className=\"selectedIngredients\">\n          {`Ingredients required: ${commaAndAndSeparate(recipe.ingredients).toLowerCase()}`}\n        </div>\n        <img className=\"drinkImage\" src={drink}></img>\n        <br></br><br></br>\n        <div className=\"descriptiveText\">Your unknown drink will be one of these 3:</div>\n        <br></br><br></br>\n        {/* Three potential recipe options */}\n        {recipeOptions.map(r => {\n          return (<div className=\"drinkName\">{r.name}</div>)\n        })}\n        <br></br><br></br>\n        <div className=\"descriptiveText\">\n          The drink that you will make is the same one that was poisoned to kill the victim in the murder mystery.\n          Guessing the drink correctly based on the recipe will lead you to the killer!\n          So put your detective hat on and solve the mystery!\n          </div>\n        <br></br><br></br>\n\n        <Button variant=\"contained\" className=\"buttonRedLong\" onClick={toStory}>\n          Read the Mystery\n          </Button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default GenerateRecipes;\n","const Recipes = {\n  drinks: {\n    TomCollins: {\n      ingredients: ['lemon', 'whisky', 'ice', 'soda water'],\n      steps: [\n        'combine sugar and 1/3 cup water in a jar',\n        'pour in 1.5 shots of whisky',\n        'add 1/2 cup of soda water',\n        'squeeze in lemon juice'\n      ],\n      name: 'Tom Collins',\n    },\n    CapeCodder: {\n      ingredients: ['cranberry juice', 'vodka', 'lime', 'ice'],\n      steps: [\n        'add 1 shot of vodka to a glass',\n        'add 1-2 ice cubes',\n        'squeeze in 3/4 ounce lime juice',\n        'add 3 ounces of cranberry juice',\n      ],\n      name: 'Cape Codder',\n    },\n    Daiquiri: {\n      ingredients: ['rum', 'lime', 'sugar', 'ice'],\n      steps: [\n        'add all the ingredients into a shaker with ice, and shake until well-chilled',\n        'Strain into a chilled coupe',\n        'garnish with a lime twist',\n      ],\n      name: 'Daiquiri',\n    },\n    WhiteWineSprizer: {\n      ingredients: ['white wine', 'soda water', 'lemon'],\n      steps: [\n        'add 1/4 cup of soda water to a glass',\n        'add 3/4 cup of white wine to the glass',\n        'garnish with a lemon rind',\n      ],\n      name: 'White Wine Spritzer',\n    },\n    Margarita: {\n      ingredients: ['tequila', 'lime', 'ice', 'salt'],\n      steps: [\n        'run a lime wedge around rim of glass',\n        'dip the rim in a coarse salt',\n        'pour one shot of tequila into glass',\n        'add 1-2 ice cubes',\n        'add a lime wedge'\n      ],\n      name: \"Margarita\",\n    },\n    Cosmopolitan: {\n      ingredients: ['vodka', 'triple sec', 'lime', 'cranberry juice', 'ice'],\n      steps: [\n        'add 1 shot of vodka',\n        'add ice cubes',\n        'add 1 tablespoon of triple sec',\n        'add 2 tablespoons of cranberry juice',\n        'squeeze in 1/2 ounce of lime juice'\n      ],\n      name: 'Cosmopolitan',\n    },\n    MoscowMule: {\n      ingredients: ['vodka', 'ginger beer', 'lime', 'ice'],\n      steps: [\n        'add 2 shots of vodka to a glass',\n        'add 1/2 ounce of lime to glass',\n        'add 2-3 ice cubes',\n        'stir in 1/2 cup of ginger beer',\n        'drop in lime wedge'\n      ],\n      name: 'Moscow Mule',\n    },\n    ClassicMartini: {\n      ingredients: ['gin', 'vermouth', 'ice', 'lemon'],\n      steps: [\n        'add a 1.5 shots of gin to a glass',\n        'add half a shot of vermouth to the glass',\n        'add cubed ice and stir for 30 seconds',\n        'add a lemon peel to the glass'\n      ],\n      name: 'Classic Martini',\n    },\n    VodkaMartini: {\n      ingredients: ['vodka', 'vermouth', 'ice', 'lemon'],\n      steps: [\n        'add a 1.5 shots of vodka to a glass',\n        'add half a shot of vermouth to the glass',\n        'add cubed ice and stir for 30 seconds',\n        'add a lemon peel to the glass'\n      ],\n      name: 'Vodka Martini',\n    },\n    Mojito: {\n      ingredients: ['mint', 'rum', 'lime', 'soda water', 'sugar'],\n      steps: [\n        'add 1-2 lime wedges to a glass',\n        'add 2 tablespoons of sugar',\n        'optional step: add 2-3 ice cubes',\n        'add 1 shot of rum',\n        'add 1/2 cup of soda water',\n        'add 5-10 mint leaves'\n      ],\n      name: 'Mojito',\n    },\n    French75: {\n      ingredients: ['gin', 'sugar', 'lemon', 'champagne'],\n      steps: [\n        'add 3/4 ounce of lemon juice to a glass',\n        'add 1.5 shots of gin to the glass',\n        'add 0.5 tablespoon of sugar and 1 tablespoon of water',\n        'add 1.5 shots of champagne'\n      ],\n      name: 'French 75',\n    },\n    Gimlet: {\n      ingredients: ['gin', 'sugar', 'lime'],\n      steps: [\n        'add 1.5 shots of gin to a glass',\n        'add 0.5 shot of lime juice',\n        'add 0.5 tablespoon of sugar and 1 tablespoon of water',\n      ],\n      name: 'Gimlet',\n    },\n    DarkandStormy: {\n      ingredients: ['rum', 'ginger beer', 'ice'],\n      steps: [\n        'add two shots of ginger beer to a glass',\n        'optional: add 0.5 shots of lime juice to glass',\n        'add 1.5 shots of rum to glass',\n        'add icecubes and stir'\n      ],\n      name: 'Dark and Stormy',\n    },\n    MaiTai: {\n      ingredients: ['rum', 'orange', 'sugar', 'triple sec'],\n      steps: [\n        'add 2 shots of rum to a glass',\n        'add 0.5 cup of orange juice to the glass',\n        'add 1 shot of triple sec to the glass',\n        'add 0.5 tabespoon of sugar to the glass'\n      ],\n      name: 'Mai Tai',\n    },\n    Southside: {\n      ingredients: ['gin', 'mint', 'lime'],\n      steps: [\n        'add 1.5 shots of gin to a glass',\n        'add 0.5 shot of lime juice',\n        'add 1-2 mint leaves',\n      ],\n      name: 'Southside',\n    },\n    GingerSpritz: {\n      ingredients: ['white wine', 'ginger beer', 'lime'],\n      steps: [\n        'add 3 shots of white win to a glass',\n        'add 2 shots of ginger beer to the glass',\n        'garnish with half a lime',\n      ],\n      name: 'Ginger Spritz',\n    },\n    Screwdriver: {\n      ingredients: ['orange', 'tequila', 'ice'],\n      steps: [\n        'add 2-3 ice cubes to a glass',\n        'add 1.5 shots of tequila to a glass',\n        'add 4 shots of orange juice to the glass',\n      ],\n      name: 'Screwdriver',\n    },\n    OrangeBlossom: {\n      ingredients: ['orange', 'gin', 'vermouth'],\n      steps: [\n        'add 1 shot of gin to a glass',\n        'add 1 shot of vermouth',\n        'add 1 shot of orange juice',\n      ],\n      name: 'Orange Blossom',\n    },\n    BishopCocktail: {\n      ingredients: ['rum', 'red wine', 'sugar', 'lime'],\n      steps: [\n        'add 0.5 tablespoon of sugar and 1 tablespoon of water to a glass',\n        'add 2 shots of rum to the glass',\n        'add 1 shot of red wine',\n        'squeeze in half a lime'\n      ],\n      name: 'Bishop Cocktail',\n    },\n    RedWineSpritzer: {\n      ingredients: ['red wine', 'soda water', 'ice', 'mint'],\n      steps: [\n        'fill glass 1/2 full of ice',\n        'pour wine over ice till 1/2 full',\n        'fill remaining glass with soda water',\n        'garnish with mint leaves'\n      ],\n      name: 'Red Wine Spritzer',\n    },\n  },\n  food: {\n\n  },\n};\n\nexport default Recipes;\n","export default __webpack_public_path__ + \"static/media/wine.8d805005.jpg\";","export default __webpack_public_path__ + \"static/media/lemon.7ab00525.jpg\";","export default __webpack_public_path__ + \"static/media/alcohol bottle.f9c04211.png\";","export default __webpack_public_path__ + \"static/media/soda.cb44e2a9.png\";","export default __webpack_public_path__ + \"static/media/whiskey.e4cd7712.png\";","export default __webpack_public_path__ + \"static/media/sparkling.b4f57624.png\";","export default __webpack_public_path__ + \"static/media/orange.92d8d6e5.png\";","export default __webpack_public_path__ + \"static/media/tonic.eb2e7db3.png\";","export default __webpack_public_path__ + \"static/media/honey.84c994c2.png\";","export default __webpack_public_path__ + \"static/media/rum.83943142.png\";","export default __webpack_public_path__ + \"static/media/tequila.fa6440c4.png\";","export default __webpack_public_path__ + \"static/media/bourbon.d5c3fa85.png\";","export default __webpack_public_path__ + \"static/media/ginger.b76df86f.png\";","export default __webpack_public_path__ + \"static/media/gin.8d897bfb.png\";","export default __webpack_public_path__ + \"static/media/mint.0e9340ca.png\";","export default __webpack_public_path__ + \"static/media/tomato.375b0fbf.png\";","export default __webpack_public_path__ + \"static/media/cranberry.2f073283.jpg\";","export default __webpack_public_path__ + \"static/media/vermouth.6ac78e17.jpg\";","export default __webpack_public_path__ + \"static/media/champagne.92bc728c.png\";","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport \"../styles/addingredients.css\";\nimport \"../styles/buttons.css\";\n\nimport Recipes from \"../Components/Recipes.js\";\nimport wine from \"../assets/wine.jpg\";\nimport lemon from \"../assets/lemon.jpg\";\nimport alcohol from \"../assets/alcohol bottle.png\";\nimport soda from \"../assets/soda.png\";\nimport whiskey from \"../assets/whiskey.png\";\nimport Sparkling from \"../assets/sparkling.png\";\nimport orange from \"../assets/orange.png\";\nimport tonic from \"../assets/tonic.png\";\nimport honey from \"../assets/honey.png\";\nimport rum from \"../assets/rum.png\";\nimport tequila from \"../assets/tequila.png\";\nimport bourbon from \"../assets/bourbon.png\";\nimport ginger from \"../assets/ginger.png\";\nimport gin from \"../assets/gin.png\";\nimport mint from \"../assets/mint.png\";\nimport tomato from \"../assets/tomato.png\";\nimport cranberry from '../assets/cranberry.jpg';\nimport vermouth from '../assets/vermouth.jpg';\nimport champagne from '../assets/champagne.png';\n\nimport { Button } from \"@material-ui/core\";\nimport { arrayInSet, randFrom } from '../logic/utils';\nimport { useHistory } from \"react-router-dom\";\n\nconst IngredientCard = (props) => {\n  const { value, image, onClick } = props;\n  const [selected, setSelected] = useState(false);\n  const handleClick = () => {\n    setSelected(!selected);\n    onClick(value.toLowerCase(), !selected);\n  };\n  const currentClassName = selected ? \"foodItemBoxSelected\" : \"foodItemBox\";\n\n  return (\n    <Grid item xs={2}>\n      <div className={currentClassName} onClick={handleClick}>\n        <p style={{ userSelect: \"none\" }}>{value}</p>\n        <img alt={value} className=\"foodItemImage\" src={image}></img>\n      </div>\n    </Grid>\n  );\n};\n\nconst AddIngredients = (props) => {\n  const assumedIngredients = ['ice', 'salt', 'sugar'];\n  const [selected, setSelected] = useState(new Set(assumedIngredients));\n  const recipes = Recipes.drinks;\n  const history = useHistory();\n\n  const onIngredientClick = (value, adding) => {\n    if (adding) {\n      selected.add(value);\n    } else {\n      selected.delete(value);\n    }\n  };\n\n  // Set the recipe of each of the suspects as well as the\n  // recipe the user will make to deduce who dunit\n  const setUpRecipes = (possibilities) => {\n    props.setRecipeOptions(possibilities);\n    props.setSuspects({\n      Elizabeth: { recipe: possibilities[0].name, },\n      Margaret: { recipe: possibilities[1].name, },\n      Raymond: { recipe: possibilities[2].name, },\n    });\n    props.setRecipe(randFrom(possibilities));\n  }\n\n  const onGenerateRecipes = () => {\n    // Find all the possible recipes the user can make\n    var possibleRecipes = [];\n    Object.keys(recipes).forEach(key => {\n      if (arrayInSet(recipes[key].ingredients, selected) === true) {\n        possibleRecipes.push(recipes[key]);\n      }\n    });\n    // Enough possible recipes exist to continue\n    if (possibleRecipes.length >= 3) {\n      setUpRecipes(possibleRecipes.slice(0, 3));\n      history.push('/generate-recipes');\n    } else {\n      console.log('not enough matching recipes');\n    }\n  }\n\n  return (\n    <div className=\"background\">\n      <div className=\"ingredientsTitlePage\">What ingredients do you have?</div>\n      <div className=\"ingredientsInstructions\">\n        <h1>\n          Add anything and everything that you have in your kitchen! Based on\n          your ingredients, we will generate mysterious recipes for you.\n        </h1>\n        <br></br>\n        <p>Click on each ingredient card to select</p>\n      </div>\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className=\"ingredients\"\n      >\n        <IngredientCard\n          value=\"Lemon\"\n          image={lemon}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Scotch\"\n          image={alcohol}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Soda Water\"\n          image={soda}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Lime\"\n          image={lemon}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Tequila\"\n          image={tequila}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Rum\"\n          image={rum}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Whiskey\"\n          image={whiskey}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Tonic Water\"\n          image={tonic}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Red Wine\"\n          image={wine}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Honey\"\n          image={honey}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Vodka\"\n          image={alcohol}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Sparkling Water\"\n          image={Sparkling}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Orange\"\n          image={orange}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Bourbon\"\n          image={bourbon}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"White Wine\"\n          image={wine}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Mint\"\n          image={mint}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Gin\"\n          image={gin}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Ginger Beer\"\n          image={ginger}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Rye\"\n          image={alcohol}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Tomato\"\n          image={tomato}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Triple Sec\"\n          image={alcohol}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Cranberry Juice\"\n          image={cranberry}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Vermouth\"\n          image={vermouth}\n          onClick={onIngredientClick}\n        />\n        <IngredientCard\n          value=\"Champagne\"\n          image={champagne}\n          onClick={onIngredientClick}\n        />\n      </Grid>\n      <div className=\"generate\">\n        <Button className='buttonBlackWide' variant=\"contained\" size=\"large\"\n          onClick={onGenerateRecipes}\n        >\n          Generate Recipes\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddIngredients;\n","export default __webpack_public_path__ + \"static/media/beth.62c253bf.png\";","export default __webpack_public_path__ + \"static/media/marge.3b8dcefe.png\";","export default __webpack_public_path__ + \"static/media/ray.8a24a632.png\";","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getURLInt, getURLStr } from '../logic/utils';\n\n// Import suspect pictures\nimport beth from '../assets/beth.png';\nimport marge from '../assets/marge.png';\nimport ray from '../assets/ray.png';\n\n// Import css styles\nimport '../styles/guesskiller.css';\nimport '../styles/buttons.css';\n\n// Component for suspect image, name, and dish\nconst KillerProfile = props => {\n  const { image, name, item, onSelect, selected } = props;\n  const handleClick = () => { onSelect(name); };\n\n  return (\n    <div className='killer-profile'>\n      <img className=\"itemImage\" src={image}></img>\n      {selected === name ?\n        <div class=\"personNameSelected\">{name}</div> :\n        <div onClick={handleClick} class=\"personName\">{name}</div>\n      }\n      <div className=\"mixed\">mixed the</div>\n      <div className=\"drinkName\">{item}</div>\n    </div>\n  );\n}\n\n//This is the main function for the guess killer page\nconst GuessKiller = props => {\n  const { recipe, suspects, guess, setGuess } = props;\n  const history = useHistory();\n\n  const [selectedSuspect, setSelectedSuspect] = useState('');\n  const step = getURLInt('step', useLocation());\n  const guessed = getURLStr('guessed', useLocation());\n\n  // Link the go back button to the previous page\n  const toSteps = () => {\n    history.push(`/recipe-steps?step=${step}&guessed=${guessed}`);\n  };\n\n  // Link the submit button to go back to the steps with guessed true\n  const makeGuess = () => {\n    if (selectedSuspect !== '') {\n      let guessedAt = step;\n      if (Object.keys(guess).length !== 0) {\n        guessedAt = Math.max(guess.step, guessedAt);\n      }\n      setGuess({\n        suspect: selectedSuspect,\n        step: guessedAt,\n      });\n      history.push(`/recipe-steps?step=${step}&guessed=true`);\n    }\n  };\n\n  return (\n    <div className=\"guess-killer-container\">\n      <br></br><br></br><br></br><br></br><br></br>\n      <div className=\"white-card\">\n        <div>\n          <div className=\"title\">Who Done It?</div>\n        </div>\n        <br></br>\n        <br></br>\n\n        {/* Potential Suspects */}\n        <div className='killer-profiles'>\n          <KillerProfile image={beth} name='Elizabeth' item={suspects.Elizabeth.recipe} onSelect={setSelectedSuspect} selected={selectedSuspect} />\n          <KillerProfile image={marge} name='Margaret' item={suspects.Margaret.recipe} onSelect={setSelectedSuspect} selected={selectedSuspect} />\n          <KillerProfile image={ray} name='Raymond' item={suspects.Raymond.recipe} onSelect={setSelectedSuspect} selected={selectedSuspect} />\n        </div>\n        <br></br><br></br>\n\n        {/* Button group to go back or submit your answer */}\n        <div className='guess-killer-buttons'>\n          <Button variant=\"contained\" className=\"buttonBlack\" onClick={toSteps}>\n            Go Back\n          </Button>\n          <Button variant=\"contained\" className=\"buttonRed\" onClick={makeGuess}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GuessKiller;\n","import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { getURLInt, getURLStr } from '../logic/utils';\n\nimport '../styles/steps.css';\nimport '../styles/buttons.css';\n\n// Import Suspect Images\nimport Elizabeth from '../assets/beth.png';\nimport Margaret from '../assets/marge.png';\nimport Raymond from '../assets/ray.png';\n\n// Component for suspect name, drink, and image\nconst SuspectProfile = props => {\n  const { name, item, image } = props;\n  return (\n    <Grid item xs={4}>\n      <img alt='Elizabeth' className='itemImageSmall' src={image}></img>\n      <br></br>\n      <div class='personNameSmall'>{name}</div>\n      <div className=\"mixed\">mixed the</div>\n      <div class='foodNameSmall'>{item}</div>\n    </Grid>\n  );\n}\n\n// This page will provide the user with the steps to follow along with the poisoned recipe (minus the poison of coruse)\n// To help them figure out who the killer is, as soon as they find out what they are making\nconst RecipeSteps = (props) => {\n  const { recipe, suspects, guess } = props;\n  const history = useHistory();\n  const step = getURLInt('step', useLocation());\n  const guessed = getURLStr('guessed', useLocation());\n\n  const nextStep = () => {\n    if (step < recipe.steps.length) {\n      history.push(`/recipe-steps?step=${step + 1}&guessed=${guessed}`);\n    } else {\n      history.push('/finit');\n    }\n  };\n\n  const previousStep = () => {\n    if (step > 1) {\n      history.push(`/recipe-steps?step=${step - 1}&guessed=${guessed}`);\n    }\n  };\n\n  const toGuess = () => {\n    history.push(`/guess-killer?step=${step}&guessed=${guessed}`);\n  };\n\n  return (\n    <div className='steps'>\n      <br></br><br></br>\n      {/* The Title */}\n      <h1>Follow the recipe to find out which drink you're making and solve the mystery</h1>\n      <br></br>\n      <Grid container direction='row'>\n        <div class=\"white-card-row1\">\n          <Grid container direction='row'>\n            <Grid item xs={6}>\n              <div className='ingredientsContainer'>\n                {/* The Ingredients List */}\n                {/* <Grid className='stepNumber'> */}\n                <h2>{`Ingredients`}</h2>\n                {/* </Grid> */}\n                <ul className='ingredientsList'>\n                  {recipe.ingredients.map(ingredient => {\n                    return (<li>{ingredient}</li>);\n                  })}\n                </ul>\n              </div>\n            </Grid>\n            <Grid item xs={6}>\n              <div className='stepsPanel'>\n                {/* The Recipe Steps */}\n                <h2>{`Step ${step}`}</h2>\n                <div className='stepsDetails'>\n                  <div>{recipe.steps[step - 1]}</div>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n          <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n          {/* Previous Step */}\n          <Button variant='contained' className='buttonBlack' onClick={previousStep}>\n            Prior Step\n          </Button>\n          {/* Next Step */}\n          <Button variant='contained' className='buttonGrey' onClick={nextStep}>\n            {step === recipe.steps.length ? 'Et Fini!' : 'Next Step'}\n          </Button>\n        </div>\n\n        <div class=\"white-card-suspects\">\n          <Grid container item xs={12}>\n            <Grid item xs={12}>\n\n              {/* The Suspects */}\n              <br></br><br></br>\n              <h2 class='stepsSubtitleSuspects'>The Suspects</h2>\n              <br></br>\n            </Grid>\n            <Grid container item xs={12}>\n              <SuspectProfile name='Elizabeth' item={suspects.Elizabeth.recipe} image={Elizabeth} />\n              <SuspectProfile name='Margaret' item={suspects.Margaret.recipe} image={Margaret} />\n              <SuspectProfile name='Raymond' item={suspects.Raymond.recipe} image={Raymond} />\n            </Grid>\n            <Grid item xs={12}>\n              {/* The Menu Options */}\n              <Button variant='contained' className='buttonRed' onClick={toGuess}>\n                {guessed === 'false' ? 'Solved It?' : 'Change Guess'}\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Grid>\n    </div>\n  );\n}\n\nexport default RecipeSteps;\n","import { randFrom, commaAndAndSeparate } from './utils';\n\nconst Days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst DayDescriptors = ['Last', 'One rainy', 'One dark and stormy', 'One dreary'];\n\nconst Locations = ['at a party', 'at a dinner engagement', 'at the dance'];\n\nconst Actors = ['Elizabeth', 'Margaret', 'Raymond'];\nconst ActorsBecameSuspects = 'Elizabeth, Margaret, and Raymond became suspects in a mysterious poisoning';\n\nconst Victims = ['Mr. Robert Hughes', 'Mrs. Betty Green', 'Mr. Charles Clarke', 'Mrs. Dorothy Jones'];\nconst VictimDescriptors = ['esteemed', 'benevolent', 'influential', 'controversial']\n\nconst generateStory = recipe => {\n  let day = randFrom(DayDescriptors).concat(' ', randFrom(Days));\n  let victim = randFrom(Victims);\n  let victimFirstName = victim.split(' ')[1];\n  let victimDescriptor = randFrom(VictimDescriptors);\n  let atLocation = randFrom(Locations);\n  let ingredients = commaAndAndSeparate(recipe.ingredients);\n\n  let story = `\n    ${day}, ${atLocation}, ${ActorsBecameSuspects}.\n    The unfortunate victim was the ${victimDescriptor} ${victim}.\n    ${victimFirstName} was seen enjoying drinks made by each suspect.\n    Below you will find the name of the drink that they each mixed.\n    The detective has a description of an individual who purchased\n    ${ingredients} at the local market. We need your help determining\n    which suspect used these ingredients to make the poisonous concoction.\n    Have fun and good luck!\n  `\n  return story;\n}\n\nexport { generateStory, Actors };\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { generateStory } from '../logic/story-generation';\nimport { useHistory } from 'react-router-dom';\n\nimport Elizabeth from '../assets/beth.png';\nimport Margaret from '../assets/marge.png';\nimport Raymond from '../assets/ray.png';\n\nimport '../styles/the-story.css';\nimport '../styles/buttons.css';\n\n// Component for actor name, drink, and image\nconst ActorProfile = props => {\n  const { image, name, item } = props;\n  return (\n    <div className='actor-profile'>\n      <img className='actor-image' alt={name} src={image} />\n      <br></br>\n      <div className='actor-name'>{name}</div>\n      <div>mixed the</div>\n      <div className=\"drink-red\">{item}</div>\n    </div>\n  );\n}\n\nconst TheStory = (props) => {\n  const { recipe, suspects } = props;\n  const history = useHistory();\n  let story = generateStory(recipe);\n\n  const toSteps = () => {\n    history.push('/recipe-steps?step=1&guessed=false');\n  };\n\n  return (\n    <div className='story-container'>\n      <div className=\"storyTitle\">A Speakeasy Murder Mystery</div>\n      <br></br><br></br>\n      <div className='story'>{story}</div>\n      <br></br>\n      <Button variant='contained' className='buttonBlack' onClick={toSteps}>\n        Begin!\n      </Button>\n      <br></br><br></br>\n\n      <div className=\"white-card-story\">\n        <div className=\"title\">The Suspects</div>\n        <br></br><br></br>\n        {/* Potential Suspects */}\n        <div className='killer-profiles'>\n          <ActorProfile name='Elizabeth' image={Elizabeth} item={suspects.Elizabeth.recipe} />\n          <ActorProfile name='Margaret' image={Margaret} item={suspects.Margaret.recipe} />\n          <ActorProfile name='Raymond' image={Raymond} item={suspects.Raymond.recipe} />\n        </div>\n        <br></br><br></br>\n      </div>\n    </div>\n  );\n}\n\nexport default TheStory;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/finit.css';\n\nimport beth from '../assets/beth.png';\nimport marge from '../assets/marge.png';\nimport ray from '../assets/ray.png';\n\nconst getKiller = (recipe, suspects) => {\n  let killer = null;\n  Object.keys(suspects).forEach(name => {\n    if (suspects[name].recipe === recipe.name) { killer = name; }\n  });\n  return killer;\n}\n\nconst getFatalRecipe = (killer, suspects) => {\n  console.log(killer);\n  console.log(suspects);\n  return suspects[killer].recipe;\n}\n\nconst KillerProfile = props => {\n  const { name, recipe } = props;\n  const images = { 'Elizabeth': beth, 'Margaret': marge, 'Raymond': ray };\n  const image = images[name];\n\n  return (\n    <div className=\"itemBoxOnePerson\">\n      <img className=\"itemImage\" src={image}></img>\n      <div class=\"killerName\">{name}</div>\n      <div class=\"mixed\">mixed the</div>\n      <div class=\"drinkName\">{recipe}</div>\n    </div>\n  )\n}\n\nconst Finit = props => {\n  const { recipe, suspects, guess, setRecipe, setRecipeOptions, setSuspects, setGuess } = props;\n  const history = useHistory();\n\n  let correct = false;\n  if (Object.keys(guess).length !== 0) {\n    correct = suspects[guess.suspect].recipe === recipe.name;\n  }\n\n  const killer = getKiller(recipe, suspects);\n  const fatalRecipe = getFatalRecipe(killer, suspects);\n\n  const title = correct ?\n    'Great job! You\\'d make a good detective!'\n    : `So close! The killer was ${killer}`;\n  const subtitle = correct ?\n    `The killer was ${killer}`\n    : `${killer} got away with the murder`;\n\n  const conclusion = correct ?\n    `${killer} skipped town, thinking they had escaped. Luckily, and keen detective such as\n    yourself rose to the challenge and solved the mystery!`\n    : `${killer} skipped town and escaped!`;\n\n  const playAgain = () => {\n    setRecipe({});\n    setRecipeOptions([]);\n    setSuspects({});\n    setGuess({});\n    history.push('/');\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"redBackground\">\n        <div className=\"white-card\">\n          <div className=\"title\">{title}</div>\n          <br></br>\n          <div className=\"subtitle\">{subtitle}</div>\n          <br></br>\n          <br></br>\n\n          <KillerProfile name={killer} recipe={fatalRecipe} /><br></br>\n\n          <div className=\"storyConclusion\">{`The victim once had a secret affair with none other than\n            ${killer}. After a brutal separation, ${killer} was quick to get their revenge. They added a drop of poison\n            to their ${fatalRecipe} and served it to the victim on the night of the murder. ${conclusion}\n            Click play again to solve another mystery.${correct ? '' : ' Better luck next time!'}`}</div>\n\n          <Button variant=\"contained\" className=\"buttonRedLong\"\n            onClick={playAgain}\n          >\n            Play Again\n            </Button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Finit;\n","export default __webpack_public_path__ + \"static/media/drink.73ec98bb.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\n\nimport drink from \"../assets/drink.jpg\";\n\nimport \"../styles/home.css\";\n\nconst Home = (props) => {\n  return (\n    <React.Fragment>\n      <div class=\"homeBackground\"></div>\n      <div class=\"home\">\n        <br></br><br></br>\n        <h1>WHO MIXED IT?</h1>\n        <br></br>\n\n        <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n          {/* Card option to select drink */}\n          <Grid item xs={3} className=\"homeOptionCard homeOptionCardDrink\">\n            <img\n              class=\"homeOptionCardImage homeOptionCardDrink\"\n              src={drink}\n            ></img>\n            <br></br>\n            {/* Link to start the game */}\n            <Link class=\"homeOptionCardText\" to=\"/add-ingredients?type=drink\">\n              Make a Drink\n            </Link>\n          </Grid>\n        </Grid>\n        <br></br>\n        <br></br>\n        {/* Instructions so we don't confuse everyone too much */}\n        <p className=\"instructions\">\n          In Who Mixed It, you select drink ingredients that you have in your kitchen.\n          Based on these ingredients, you will follow an unknown recipe to create a delicious drink.\n          Figuring out what drink you are mixing will help you solve a murder mystery.\n        </p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import GenerateRecipes from './pages/GenerateRecipes';\nimport AddIngredients from './pages/AddIngredients';\nimport GuessKiller from './pages/GuessKiller';\nimport RecipeSteps from './pages/RecipeSteps';\nimport TheStory from './pages/TheStory';\nimport Finit from './pages/Finit';\nimport Home from './pages/Home';\n\nconst Routes = [\n  {\n    path: '/add-ingredients',\n    component: AddIngredients,\n  },\n  {\n    path: '/guess-killer',\n    component: GuessKiller,\n  },\n  {\n    path: '/recipe-steps',\n    component: RecipeSteps,\n  },\n  {\n    path: '/story',\n    component: TheStory,\n  },\n  {\n    path: '/finit',\n    component: Finit,\n  },\n  {\n    path: '/generate-recipes',\n    component: GenerateRecipes,\n  },\n];\n\nexport { Home as Default };\nexport default Routes;\n","import React, { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Routes, { Default } from './Routes';\n\nimport './styles/app.css';\n\nfunction App() {\n  // State variables defining the murder mystery\n  const [recipe, setRecipe] = useState({});\n  const [recipeOptions, setRecipeOptions] = useState([]);\n  const [suspects, setSuspects] = useState({});\n  const [guess, setGuess] = useState({});\n\n  return (\n    <div className=\"App\">\n      <HashRouter basename='/'>\n        <Switch>\n          <Route exact path='/' component={Default} />\n          {Routes.map(route =>\n            <Route path={route.path}>\n              <route.component\n                recipe={recipe}\n                setRecipe={setRecipe}\n                recipeOptions={recipeOptions}\n                setRecipeOptions={setRecipeOptions}\n                suspects={suspects}\n                setSuspects={setSuspects}\n                guess={guess}\n                setGuess={setGuess}\n              />\n            </Route>\n          )}\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}